#! /usr/bin/env bash
#
#   opengit [branch]
#
# This script will open your project's page on github.com.
#
# When no argument is passed, it will open the page on the current branch

function open()
{
  local open_cmd='huh?'
  if [ -z `echo $MACHTYPE | grep linux` ]; then
    open_cmd='open'
  else
    open_cmd='xdg-open'
  fi
  $open_cmd $1
}

# Check if remote is HTTPS or SSH
# If HTTPS, return everything after '.com/'
# If SSH, return everything after ':'

function get_remote()
{
  remote=$(git config remote.origin.url)
  if [[ $remote = https* ]]; then
    repo=${remote##*.com/}
  else
    repo=${remote##*:}
  fi
  echo $repo
}

# Check if the branch exists remotely

function check_branch_existence()
{
  remote_branches=$(git branch -r)
  if [[ $remote_branches = *$1* ]]; then
    open $2$1
  else
    echo "The branch '$1' is only local"
  fi
}

if [ -d .git ]; then
  if [ -z "$(git remote -v)" ]; then
    echo "Hum....there are no remotes here"
  else
    repo=$(get_remote)

    url="https://github.com/${repo%%.*}/tree/"

    if [ -z "$1" ];then
      check_branch_existence $(git symbolic-ref --short HEAD) $url
    else
      check_branch_existence ${1} $url
    fi
  fi
else
  echo "Crap, ain't no git repo"
fi;